# Plotting the prevalence of S, I and R over time 

output_long <- melt(as.data.frame(output), id = "time")                  # turn output dataset into long format

# Calculating the proportion in each compartment as a column in the long-format output
output_long$proportion <- output_long$value/sum(initial_state_values)

# Plot the number of people in the S, I and R compartments over time
ggplot(data = output_long,                                               # specify object containing data to plot
       aes(x = time, y = proportion, colour = variable, group = variable)) +  # assign columns to axes and groups
  geom_line() +                                                          # represent data as lines
  xlab("Time (years)")+                                                  # add label for x axis
  ylab("Prevalence (proportion)") +                                      # add label for y axis
  labs(colour = "Compartment",                                           # add legend title  
       title = "Prevalence of susceptible, 
       infected and recovered people over time")

# LOAD THE PACKAGES:
library(deSolve)
library(reshape2)
library(ggplot2)

# MODEL INPUTS:

# Vector storing the initial number of people in each compartment (at timestep 0)
initial_state_values <- c(S = 414317,   # the whole population we are modelling is susceptible to infection
                          I = 2181,           # the epidemic starts with a single infected person
                          R = 2608)           # there is no prior immunity in the population

# Vector storing the parameters describing the transition rates in units of days^-1
parameters <- c(beta = 0.53,      # the infection rate, which acts on susceptibles
                gamma = 0.0625,     # the rate of recovery, which acts on those infected
                mu = 1/4.5,       # the mortality rate, which acts on each compartment
                b = 1/24)        # the birth rate

# TIMESTEPS:

# Vector storing the sequence of timesteps to solve the model at
times <- seq(from = 0, to = 365, by = 1)   # from 0 to 365 days in daily intervals

# SIR MODEL FUNCTION: 

# The model function takes as input arguments (in the following order): time, state and parameters
sir_model <- function(time, state, parameters) {  
  
  with(as.list(c(state, parameters)), {  # tell R to look for variable names within the state and parameters objects    
    
    # Calculating the total population size N (the sum of the number of people in each compartment)
    N <- S+I+R
    
    # Defining lambda as a function of beta and I:
    lambda <- beta * I/N
    
    # The differential equations
    dS <- -lambda * S - mu * S + b * N            
    dI <- lambda * S - gamma * I  - mu * I           
    dR <- gamma * I - mu * R               
    
    # Return the number of people in the S, I and R compartments at each timestep 
    # (in the same order as the input state variables)
    return(list(c(dS, dI, dR))) 
  })
  
}

# MODEL OUTPUT (solving the differential equations):

# Solving the differential equations using the ode integration algorithm
output_pigs <- as.data.frame(ode(y = initial_state_values, 
                                 times = times, 
                                 func = sir_model,
                                 parms = parameters))

# PLOT

output_pigs_long <- melt(as.data.frame(output_pigs), id = "time")        # turn output dataset into long format

# Adding a column for the prevalence proportion to the long-format output
output_pigs_long$prevalence <- output_pigs_long$value/sum(initial_state_values)

# Plot the prevalence proportion
ggplot(data = output_pigs_long,                                               # specify object containing data to plot
       aes(x = time, y = prevalence, colour = variable, group = variable)) +  # assign columns to axes and groups
  geom_line() +                                                          # represent data as lines
  xlab("Time (days)")+                                                   # add label for x axis
  ylab("Prevalence (proportion)") +                                      # add label for y axis
  labs(colour = "Compartment",                                           # add legend title
       title = "Prevalence of infection, susceptibility and recovery over time") +  # add plot title
  theme(legend.position = "bottom")

# Calculating the effective reproduction number 
output_pigs$reff <- parameters["beta"]/parameters["gamma"] *                    # R0 = beta/gamma
  output_pigs$S/(output_pigs$S+output_pigs$I+output_pigs$R) # multiply R0 by the proportion susceptible
# at each timestep/for each row

# Plot Reff
ggplot(data = output_pigs,                                               # specify object containing data to plot
       aes(x = time, y = reff)) +                                        # assign columns to axes and groups
  geom_line() +                                                          # represent data as lines
  xlab("Time (days)")+                                                   # add label for x axis
  ylab("Re") +                                                         # add label for y axis
  labs(title = "National Effective Reproduction Number Over Time") +              # add plot title
  ylim(c(0,10))
